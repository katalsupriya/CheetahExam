// <auto-generated />
using System;
using CheetahExam.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CheetahExam.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240220081004_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CheetahExam.Domain.Entities.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedUtc")
                        .HasColumnType("datetime2");

                    b.Property<bool>("ISActive")
                        .HasColumnType("bit");

                    b.Property<bool>("ISArchive")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedUtc")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MediaId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupportContact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UniqueId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MediaId");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("CheetahExam.Domain.Entities.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double?>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("CourseCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Courses_UserID")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("ISActive")
                        .HasColumnType("bit");

                    b.Property<bool>("ISArchive")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumberOfStudents")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UniqueId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("CheetahExam.Domain.Entities.Exam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AllowableAttempts")
                        .HasColumnType("int");

                    b.Property<int?>("Category_GeneralLookUpID")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedUtc")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Discipline_GeneralLookUpID")
                        .HasColumnType("int");

                    b.Property<string>("EncryptExamLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExamDate")
                        .HasColumnType("date");

                    b.Property<TimeSpan?>("ExamDuration")
                        .HasColumnType("time");

                    b.Property<string>("FontStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ISActive")
                        .HasColumnType("bit");

                    b.Property<bool>("ISArchive")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedUtc")
                        .HasColumnType("datetime2");

                    b.Property<bool>("MarkForReview")
                        .HasColumnType("bit");

                    b.Property<int?>("MediaId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("PassingScore")
                        .HasColumnType("float");

                    b.Property<int?>("Result_GeneralLookUpID")
                        .HasColumnType("int");

                    b.Property<string>("UniqueId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Category_GeneralLookUpID");

                    b.HasIndex("Discipline_GeneralLookUpID");

                    b.HasIndex("MediaId");

                    b.HasIndex("Result_GeneralLookUpID");

                    b.ToTable("Exams");
                });

            modelBuilder.Entity("CheetahExam.Domain.Entities.ExamResultOption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ExamResultOption_ExamID")
                        .HasColumnType("int");

                    b.Property<bool>("ISActive")
                        .HasColumnType("bit");

                    b.Property<bool>("ISArchive")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedUtc")
                        .HasColumnType("datetime2");

                    b.Property<double>("MinPercentage")
                        .HasColumnType("float");

                    b.Property<string>("OptionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UniqueId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ExamResultOption_ExamID");

                    b.ToTable("ExamResultOptions");
                });

            modelBuilder.Entity("CheetahExam.Domain.Entities.Font", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Family")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ISActive")
                        .HasColumnType("bit");

                    b.Property<bool>("ISArchive")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UniqueId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Fonts");
                });

            modelBuilder.Entity("CheetahExam.Domain.Entities.GeneralLookUp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<bool>("ISActive")
                        .HasColumnType("bit");

                    b.Property<bool>("ISArchive")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UniqueId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("GeneralLookUps");
                });

            modelBuilder.Entity("CheetahExam.Domain.Entities.Media", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedUtc")
                        .HasColumnType("datetime2");

                    b.Property<bool>("ISActive")
                        .HasColumnType("bit");

                    b.Property<bool>("ISArchive")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedUtc")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MediaType_GeneralLookUpID")
                        .HasColumnType("int");

                    b.Property<int?>("Media_OptionID")
                        .HasColumnType("int");

                    b.Property<int?>("Media_QuestionID")
                        .HasColumnType("int");

                    b.Property<string>("UniqueId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Media_OptionID")
                        .IsUnique()
                        .HasFilter("[Media_OptionID] IS NOT NULL");

                    b.HasIndex("Media_QuestionID")
                        .IsUnique()
                        .HasFilter("[Media_QuestionID] IS NOT NULL");

                    b.ToTable("Media");
                });

            modelBuilder.Entity("CheetahExam.Domain.Entities.Option", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<bool>("ISActive")
                        .HasColumnType("bit");

                    b.Property<bool>("ISArchive")
                        .HasColumnType("bit");

                    b.Property<bool>("ISCorrect")
                        .HasColumnType("bit");

                    b.Property<bool>("ISInCorrectMatch")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Match")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Option_QuestionID")
                        .HasColumnType("int");

                    b.Property<string>("UniqueId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Option_QuestionID");

                    b.ToTable("Options");
                });

            modelBuilder.Entity("CheetahExam.Domain.Entities.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<bool>("ISActive")
                        .HasColumnType("bit");

                    b.Property<bool>("ISArchive")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OldDisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("ParentQuestionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("QuestionLevelType_GeneralLookUpID")
                        .HasColumnType("int");

                    b.Property<string>("QuestionType_GeneralLookUpID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Question_ExamID")
                        .HasColumnType("int");

                    b.Property<string>("UniqueId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Question_ExamID");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("CheetahExam.Domain.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedUtc")
                        .HasColumnType("datetime2");

                    b.Property<bool>("ISActive")
                        .HasColumnType("bit");

                    b.Property<bool>("ISArchive")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UniqueId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("CheetahExam.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("Date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HashedPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ISActive")
                        .HasColumnType("bit");

                    b.Property<bool>("ISArchive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UniqueId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("User_CompanyID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("User_CompanyID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CheetahExam.Domain.Entities.UserRoleMapper", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedUtc")
                        .HasColumnType("datetime2");

                    b.Property<bool>("ISActive")
                        .HasColumnType("bit");

                    b.Property<bool>("ISArchive")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("UniqueId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserRoleMapper_RoleID")
                        .HasColumnType("int");

                    b.Property<int?>("UserRoleMapper_UserID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserRoleMapper_RoleID");

                    b.HasIndex("UserRoleMapper_UserID");

                    b.ToTable("UserRoleMappers");
                });

            modelBuilder.Entity("CheetahExam.Domain.Entities.Company", b =>
                {
                    b.HasOne("CheetahExam.Domain.Entities.Media", "Media")
                        .WithMany()
                        .HasForeignKey("MediaId");

                    b.Navigation("Media");
                });

            modelBuilder.Entity("CheetahExam.Domain.Entities.Course", b =>
                {
                    b.HasOne("CheetahExam.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CheetahExam.Domain.Entities.Exam", b =>
                {
                    b.HasOne("CheetahExam.Domain.Entities.GeneralLookUp", "Category_GeneralLookUp")
                        .WithMany()
                        .HasForeignKey("Category_GeneralLookUpID");

                    b.HasOne("CheetahExam.Domain.Entities.GeneralLookUp", "Discipline_GeneralLookUp")
                        .WithMany()
                        .HasForeignKey("Discipline_GeneralLookUpID");

                    b.HasOne("CheetahExam.Domain.Entities.Media", "Media")
                        .WithMany()
                        .HasForeignKey("MediaId");

                    b.HasOne("CheetahExam.Domain.Entities.GeneralLookUp", "Result_GeneralLookUp")
                        .WithMany()
                        .HasForeignKey("Result_GeneralLookUpID");

                    b.Navigation("Category_GeneralLookUp");

                    b.Navigation("Discipline_GeneralLookUp");

                    b.Navigation("Media");

                    b.Navigation("Result_GeneralLookUp");
                });

            modelBuilder.Entity("CheetahExam.Domain.Entities.ExamResultOption", b =>
                {
                    b.HasOne("CheetahExam.Domain.Entities.Exam", "ExamResultOption_Exam")
                        .WithMany("ExamResultOptions")
                        .HasForeignKey("ExamResultOption_ExamID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExamResultOption_Exam");
                });

            modelBuilder.Entity("CheetahExam.Domain.Entities.Media", b =>
                {
                    b.HasOne("CheetahExam.Domain.Entities.Option", "Media_Option")
                        .WithOne("Media")
                        .HasForeignKey("CheetahExam.Domain.Entities.Media", "Media_OptionID");

                    b.HasOne("CheetahExam.Domain.Entities.Question", "Media_Question")
                        .WithOne("Media")
                        .HasForeignKey("CheetahExam.Domain.Entities.Media", "Media_QuestionID");

                    b.Navigation("Media_Option");

                    b.Navigation("Media_Question");
                });

            modelBuilder.Entity("CheetahExam.Domain.Entities.Option", b =>
                {
                    b.HasOne("CheetahExam.Domain.Entities.Question", "Option_Question")
                        .WithMany("Options")
                        .HasForeignKey("Option_QuestionID");

                    b.Navigation("Option_Question");
                });

            modelBuilder.Entity("CheetahExam.Domain.Entities.Question", b =>
                {
                    b.HasOne("CheetahExam.Domain.Entities.Exam", "Question_Exam")
                        .WithMany("Questions")
                        .HasForeignKey("Question_ExamID");

                    b.Navigation("Question_Exam");
                });

            modelBuilder.Entity("CheetahExam.Domain.Entities.User", b =>
                {
                    b.HasOne("CheetahExam.Domain.Entities.Company", "User_Company")
                        .WithMany("Users")
                        .HasForeignKey("User_CompanyID");

                    b.Navigation("User_Company");
                });

            modelBuilder.Entity("CheetahExam.Domain.Entities.UserRoleMapper", b =>
                {
                    b.HasOne("CheetahExam.Domain.Entities.Role", "UserRoleMapper_Role")
                        .WithMany("UserRoleMappers")
                        .HasForeignKey("UserRoleMapper_RoleID");

                    b.HasOne("CheetahExam.Domain.Entities.User", "UserRoleMapper_User")
                        .WithMany("UserRoleMappers")
                        .HasForeignKey("UserRoleMapper_UserID");

                    b.Navigation("UserRoleMapper_Role");

                    b.Navigation("UserRoleMapper_User");
                });

            modelBuilder.Entity("CheetahExam.Domain.Entities.Company", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("CheetahExam.Domain.Entities.Exam", b =>
                {
                    b.Navigation("ExamResultOptions");

                    b.Navigation("Questions");
                });

            modelBuilder.Entity("CheetahExam.Domain.Entities.Option", b =>
                {
                    b.Navigation("Media");
                });

            modelBuilder.Entity("CheetahExam.Domain.Entities.Question", b =>
                {
                    b.Navigation("Media");

                    b.Navigation("Options");
                });

            modelBuilder.Entity("CheetahExam.Domain.Entities.Role", b =>
                {
                    b.Navigation("UserRoleMappers");
                });

            modelBuilder.Entity("CheetahExam.Domain.Entities.User", b =>
                {
                    b.Navigation("UserRoleMappers");
                });
#pragma warning restore 612, 618
        }
    }
}
